{"version":3,"file":"static/js/272.8227b42f.chunk.js","mappings":"uLAMA,MAAMA,GAAUC,EAAAA,EAAAA,GAAA,OAAAC,OAAA,aAAAD,CAAA,CAAAE,KAAA,SAAAC,OAAA,mGAgBD,SAASC,EAAQC,GAC5B,MAAM,QAACC,GAAWD,EAElB,OACIE,EAAAA,EAAAA,IAACR,EAAU,MACPQ,EAAAA,EAAAA,IAAA,YACIA,EAAAA,EAAAA,IAACC,EAAAA,EAAe,CAACC,KAAMC,EAAAA,OAE1BJ,EAGb,CCrBO,MAAMK,EAA4B,CACrCC,UAAAA,CAAUC,GAAc,IAAb,SAACC,GAASD,EACjB,OAAON,EAAAA,EAAAA,IAACH,EAAO,CAACE,QAASQ,GAC7B,EACAC,CAAAA,CAACC,GAA8B,IAA7B,KAACC,EAAI,SAAEH,KAAaT,GAAMW,EAExB,MAAME,GAAQC,EAAAA,EAAAA,YAAWC,EAAAA,GACnBC,EAAOhB,EAAMiB,KAEbC,EAAgB,OAAJF,QAAI,IAAJA,OAAI,EAAJA,EAAMG,MAAM,cAC9B,GAAID,EAAW,CACX,MAAME,EAAYP,EAAMQ,MAAMC,GACnBA,EAAO,KAAKJ,EAAU,KAGjC,OAAKE,EAIDA,EAAgB,MACTlB,EAAAA,EAAAA,IAAA,KAAGe,KAAMG,EAAgB,KAAGxB,OAAO,SAAS2B,IAAI,cAAcd,GAGrEW,EAAgB,MACTlB,EAAAA,EAAAA,IAACsB,EAAAA,GAAI,CAACC,GAAI,IAAML,EAAgB,MAAIX,IAGxCP,EAAAA,EAAAA,IAACsB,EAAAA,GAAI,CAACC,GAAIzB,EAAMiB,MAAQ,IAAKR,IAXzBP,EAAAA,EAAAA,IAACsB,EAAAA,GAAI,CAACC,GAAIzB,EAAMiB,MAAQ,IAAKR,EAa5C,CAEA,MAAMiB,EAAa,OAAJV,QAAI,IAAJA,OAAI,EAAJA,EAAMG,MAAM,aAC3B,OAAIO,GAAUA,EAAOC,OAAS,GAAKD,EAAO,IAC/BxB,EAAAA,EAAAA,IAACsB,EAAAA,GAAI,CAACC,GAAG,IACHG,QAAUC,IACNC,OAAOC,SAASd,KAAOjB,EAAMiB,MAAQ,GACrCY,EAAEG,gBAAgB,GAE9BvB,IAGFP,EAAAA,EAAAA,IAACsB,EAAAA,GAAI,CAACC,GAAIzB,EAAMiB,MAAQ,IAAKR,EACxC,EACAwB,GAAAA,CAAGC,GAA8B,IAA7B,KAACtB,EAAI,SAAEH,KAAaT,GAAMkC,EAC1B,MAAMC,EAAMnC,EAAMmC,IAQZC,EAAW,OAAHD,QAAG,IAAHA,OAAG,EAAHA,EAAKhB,MAAM,uDACzB,OAAIiB,EACIA,EAAM,IACClC,EAAAA,EAAAA,IAAA,OAAKmC,IAAKrC,EAAMqC,IAAKF,IAAKC,EAAM,GAAIE,MAAOF,EAAM,MAEjDlC,EAAAA,EAAAA,IAAA,OAAKmC,IAAKrC,EAAMqC,IAAKF,IAAKC,EAAM,GAAIE,MAAOF,EAAM,GAAIG,OAAQH,EAAM,MAGvElC,EAAAA,EAAAA,IAAA,OAAKmC,IAAKrC,EAAMqC,IAAKF,IAAKnC,EAAMmC,KAE/C,E,8GClEW,SAASK,EAAOxC,GAE3B,MAAM,EAACyC,IAAKC,EAAAA,EAAAA,MAENC,EAAa3C,EAAM4C,QAAQC,KAAI,SAAUjD,GAC3C,OAAOM,EAAAA,EAAAA,IAAA,OAAK4C,IAAKlD,EAAOmD,MAAOC,UAAU,QAAQP,EAAE,eAADQ,OAAgBrD,EAAOmD,QAC7E,IAEA,OAAO7C,EAAAA,EAAAA,IAAA,OAAK8C,UAAU,WACjBL,EAET,CCoCA,QA1BA,SAAiB3C,GAEb,MAAMkD,EAAOlD,EAAMkD,KACnB,OAAKA,GAIEhD,EAAAA,EAAAA,IAAA,OAAK8C,UAAU,YAClB9C,EAAAA,EAAAA,IAAA,OAAKiD,GAAID,EAAKE,OACVlD,EAAAA,EAAAA,IAAA,OAAK8C,UAAU,iBACVE,EAAK9C,OAASF,EAAAA,EAAAA,IAAA,OAAK8C,UAAU,eAAeX,IAAKa,EAAK9C,KAAKiD,IAAKlB,IAAI,UACrEjC,EAAAA,EAAAA,IAAA,MAAIiD,GAAID,EAAKE,MAAOF,EAAKI,SAG7BpD,EAAAA,EAAAA,IAAA,OAAK8C,UAAU,iBACX9C,EAAAA,EAAAA,IAACsC,EAAM,CAACI,QAASM,EAAKK,eACtBrD,EAAAA,EAAAA,IAACsD,EAAAA,EAAQ,CACLC,cAAe,CAACC,EAAAA,GAChBC,WAAYrD,EAAAA,GACX4C,EAAKjD,YAfX,IAoBf,ECFA,QAzBA,SAAiBD,GAEb,MAAM4D,EAAW5D,EAAM6D,QAAkB,SACpCC,MAAK,CAACpD,EAAaqD,IAAgBrD,EAAEsD,QAAUD,EAAEC,UACjDnB,KAAIoB,IAAW/D,EAAAA,EAAAA,IAACgE,EAAO,CAACpB,IAAKmB,EAAe,MAAGf,KAAMe,MAM1D,OAJAE,EAAAA,EAAAA,YAAU,KACNC,SAASd,MAAQtD,EAAM6D,QAAe,KAAC,GACxC,CAAC7D,KAEGE,EAAAA,EAAAA,IAAA,OAAK8C,UAAU,YAClB9C,EAAAA,EAAAA,IAAA,OAAK8C,UAAU,iBACX9C,EAAAA,EAAAA,IAAA,OAAKiD,GAAG,gBAAgBH,UAAU,kBAC9B9C,EAAAA,EAAAA,IAAA,UAAKF,EAAM6D,QAAe,SAE9B3D,EAAAA,EAAAA,IAACsD,EAAAA,EAAQ,CACLC,cAAe,CAACC,EAAAA,GAChBC,WAAYrD,EAAAA,GACXN,EAAM6D,QAAQ5D,SAElB2D,GAGb,E,cCxBA,QATA,SAAqB5D,GACjB,MAAM,KAACoD,IAAQiB,EAAAA,EAAAA,MACTR,EAAU7D,EAAMsE,SAASlB,GAAQ,IAEvC,OAAOS,GACD3D,EAAAA,EAAAA,IAACqE,EAAO,CAACV,QAASA,IAClB,IACV,C","sources":["components/Warning.tsx","helper/MarkdownComponents.tsx","pages/section/components/Target.tsx","pages/section/components/Chapter.tsx","pages/section/components/Section.tsx","pages/section/SectionPage.tsx"],"sourcesContent":["import React from 'react'\n\nimport styled from '@emotion/styled';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faExclamationTriangle} from \"@fortawesome/free-solid-svg-icons\";\n\nconst WarningDiv = styled.div`\n    border: 1px solid black;\n    border-radius: 4px;\n    display: flex;\n    padding: 10px;\n\n    p {\n        padding: 0 10px;\n        margin: 0;\n    }\n`\n\ntype Props = {\n    content: any\n}\n\nexport default function Warning(props: Props) {\n    const {content} = props;\n\n    return (\n        <WarningDiv>\n            <div>\n                <FontAwesomeIcon icon={faExclamationTriangle}/>\n            </div>\n            {content}\n        </WarningDiv>\n    );\n}","import React, {useContext} from 'react'\nimport {Link} from 'react-router-dom'\nimport {LinksContext} from '../App'\nimport {Components} from \"react-markdown/lib\"\nimport Warning from \"../components/Warning\"\n\n// // @ts-ignore\n// remark.macros.img = function (altText, width) {\n//     var url = this;\n//     return '<img alt=\"' + altText + '\" src=\"' + url + '\" style=\"width: ' + width + '\" />';\n//   };\n\nexport const LinkComponent: Components = {\n    blockquote({children}) {\n        return <Warning content={children}/>\n    },\n    a({node, children, ...props}) {\n        /* eslint-disable */\n        const links = useContext(LinksContext)\n        const link = props.href\n\n        const linkMatch = link?.match('\\\\$(.*)\\\\$');\n        if (linkMatch) {\n            const foundLink = links.find((l) => {\n                return l['key'] == linkMatch[1]\n            })\n\n            if (!foundLink) {\n                return <Link to={props.href || ''}>{children}</Link>\n            }\n\n            if (foundLink['link']) {\n                return <a href={foundLink['link']} target=\"_blank\" rel=\"noreferrer\">{children}</a>\n            }\n\n            if (foundLink['slug']) {\n                return <Link to={'/' + foundLink['slug']}>{children}</Link>\n            }\n\n            return <Link to={props.href || ''}>{children}</Link>\n\n        }\n\n        const mailto = link?.match('(mailto:)')\n        if (mailto && mailto.length > 2 && mailto[1]) {\n            return <Link to='#'\n                         onClick={(e) => {\n                             window.location.href = props.href || '';\n                             e.preventDefault();\n                         }}>\n                {children}\n            </Link>\n        }\n        return <Link to={props.href || ''}>{children}</Link>\n    },\n    img({node, children, ...props}) {\n        const alt = props.alt\n        /*\n        * matches the following:\n        * alt: text, size: 50x50\n        * or\n        * alt: text, width: 50\n        * maybe later: alt.match('alt:\\\\s([\\\\w\\\\s\\-\\_\\*]*),?\\\\s?(size:\\\\s((\\\\d*)x(\\\\d*)))?,?\\\\s?(width:\\\\s(\\\\d*))?,?\\\\s?(float: (\\\\w*))?');\n        */\n        const found = alt?.match('alt: (.*), (size: ((\\\\d*)x(\\\\d*)))?(width: (\\\\d*))?');\n        if (found) {\n            if (found[7]) {\n                return <img src={props.src} alt={found[1]} width={found[7]}/>\n            } else {\n                return <img src={props.src} alt={found[1]} width={found[4]} height={found[5]}/>\n            }\n        } else {\n            return <img src={props.src} alt={props.alt}/>\n        }\n    }\n}","import React from 'react'\nimport {useTranslation} from 'react-i18next'\nimport {Role} from './Chapter'\n\ntype Props = {\n    targets: Role[]\n}\n\nexport default function Target(props: Props) {\n\n    const {t} = useTranslation()\n\n    const targetList = props.targets.map(function (target: Role) {\n        return <div key={target.rolle} className='role'>{t(`target.role.${target.rolle}`)}</div>\n    })\n\n    return <div className='targets'>\n        {targetList}\n    </div>\n}","import React from 'react'\nimport Markdown from 'react-markdown'\nimport remarkGfm from 'remark-gfm'\nimport {LinkComponent} from '../../../helper/MarkdownComponents'\nimport {IconT, SectionT} from './Section'\nimport Target from './Target'\nimport './chapter.less'\n\nexport type Role = {\n    rolle: string\n}\n\nexport type ChapterT = {\n    id: number\n    sorting: number\n    title: string\n    menu_name: string\n    content: string\n    slug: string\n    slug_with_section: string\n    icon: IconT\n    section: SectionT\n    responsible: Role[]\n}\n\ntype ChapterProps = {\n    data: ChapterT;\n};\n\nfunction Chapter(props: ChapterProps) {\n\n    const data = props.data\n    if (!data) {\n        return null\n    }\n\n    return <div className='chapter'>\n        <div id={data.slug}>\n            <div className=\"chapter-title\">\n                {data.icon && (<img className='chapter-icon' src={data.icon.url} alt=\"icon\"/>)}\n                <h2 id={data.slug}>{data.title}</h2>\n            </div>\n\n            <div className='chapter-main'>\n                <Target targets={data.responsible}/>\n                <Markdown\n                    remarkPlugins={[remarkGfm]}\n                    components={LinkComponent}>\n                    {data.content}\n                </Markdown>\n            </div>\n        </div>\n    </div>\n}\n\nexport default Chapter","import React, {useEffect} from 'react'\nimport Markdown from 'react-markdown'\nimport remarkGfm from 'remark-gfm'\nimport {LinkComponent} from '../../../helper/MarkdownComponents'\nimport Chapter, {ChapterT} from './Chapter'\nimport './section.less'\n\nexport type SectionT = {\n    chapters: ChapterT[]\n    sorting: number\n    title: string\n    content: string\n    slug: string\n    menu_name: string\n    localizations: any\n}\n\nexport type IconT = {\n    url: string\n    mime: string\n}\n\ntype Props = {\n    section: SectionT\n}\n\nfunction Section(props: Props) {\n\n    const chapters = props.section['chapters']\n        .sort((a: ChapterT, b: ChapterT) => a.sorting - b.sorting)\n        .map(chapter => <Chapter key={chapter['title']} data={chapter}></Chapter>)\n\n    useEffect(() => {\n        document.title = props.section['title']\n    }, [props]);\n\n    return <div className='content'>\n        <div className='content-main'>\n            <div id=\"section-title\" className=\"section-title\">\n                <h1>{props.section['title']}</h1>\n            </div>\n            <Markdown\n                remarkPlugins={[remarkGfm]}\n                components={LinkComponent}>\n                {props.section.content}\n            </Markdown>\n            {chapters}\n        </div>\n    </div>\n}\n\nexport default Section","import React from 'react'\nimport Section, {SectionT} from './components/Section'\nimport {useParams} from 'react-router'\n\ntype Params = {\n    slug: string\n}\n\nexport type SectionsByKey = {\n    [key: string]: SectionT\n}\n\ntype Props = {\n    sections: SectionsByKey\n}\n\nfunction SectionPage(props: Props) {\n    const {slug} = useParams<Params>()\n    const section = props.sections[slug || '']\n\n    return section\n        ? <Section section={section}/>\n        : null;\n}\n\nexport default SectionPage\n"],"names":["WarningDiv","_styled","target","name","styles","Warning","props","content","___EmotionJSX","FontAwesomeIcon","icon","faExclamationTriangle","LinkComponent","blockquote","_ref","children","a","_ref2","node","links","useContext","LinksContext","link","href","linkMatch","match","foundLink","find","l","rel","Link","to","mailto","length","onClick","e","window","location","preventDefault","img","_ref3","alt","found","src","width","height","Target","t","useTranslation","targetList","targets","map","key","rolle","className","concat","data","id","slug","url","title","responsible","Markdown","remarkPlugins","remarkGfm","components","chapters","section","sort","b","sorting","chapter","Chapter","useEffect","document","useParams","sections","Section"],"sourceRoot":""}