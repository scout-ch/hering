{"version":3,"file":"static/js/40.e4e9260b.chunk.js","mappings":"sLAMA,MAAMA,GAAUC,EAAAA,EAAAA,GAAA,OAAAC,OAAA,aAAAD,CAAA,CAAAE,KAAA,SAAAC,OAAA,mGAgBD,SAASC,EAAQC,GAC5B,MAAM,QAACC,GAAWD,EAElB,OACIE,EAAAA,EAAAA,IAACR,EAAU,MACPQ,EAAAA,EAAAA,IAAA,YACIA,EAAAA,EAAAA,IAACC,EAAAA,EAAe,CAACC,KAAMC,EAAAA,OAE1BJ,EAGb,CCrBO,MAAMK,EAA4B,CACrCC,UAAAA,CAAUC,GAAc,IAAb,SAACC,GAASD,EACjB,OAAON,EAAAA,EAAAA,IAACH,EAAO,CAACE,QAASQ,GAC7B,EACAC,CAAAA,CAACC,GAA8B,IAA7B,KAACC,EAAI,SAAEH,KAAaT,GAAMW,EAExB,MAAME,GAAQC,EAAAA,EAAAA,YAAWC,EAAAA,GACnBC,EAAOhB,EAAMiB,KAEbC,EAAgB,OAAJF,QAAI,IAAJA,OAAI,EAAJA,EAAMG,MAAM,cAC9B,GAAID,EAAW,CACX,MAAME,EAAYP,EAAMQ,MAAMC,GACnBA,EAAO,KAAKJ,EAAU,KAGjC,OAAKE,EAIDA,EAAgB,MACTlB,EAAAA,EAAAA,IAAA,KAAGe,KAAMG,EAAgB,KAAGxB,OAAO,SAAS2B,IAAI,cAAcd,GAGrEW,EAAgB,MACTlB,EAAAA,EAAAA,IAACsB,EAAAA,GAAI,CAACC,GAAI,IAAML,EAAgB,MAAIX,IAGxCP,EAAAA,EAAAA,IAACsB,EAAAA,GAAI,CAACC,GAAIzB,EAAMiB,MAAQ,IAAKR,IAXzBP,EAAAA,EAAAA,IAACsB,EAAAA,GAAI,CAACC,GAAIzB,EAAMiB,MAAQ,IAAKR,EAa5C,CAEA,MAAMiB,EAAa,OAAJV,QAAI,IAAJA,OAAI,EAAJA,EAAMG,MAAM,aAC3B,OAAIO,GAAUA,EAAOC,OAAS,GAAKD,EAAO,IAC/BxB,EAAAA,EAAAA,IAACsB,EAAAA,GAAI,CAACC,GAAG,IACHG,QAAUC,IACNC,OAAOC,SAASd,KAAOjB,EAAMiB,MAAQ,GACrCY,EAAEG,gBAAgB,GAE9BvB,IAGFP,EAAAA,EAAAA,IAACsB,EAAAA,GAAI,CAACC,GAAIzB,EAAMiB,MAAQ,IAAKR,EACxC,EACAwB,GAAAA,CAAGC,GAA8B,IAA7B,KAACtB,EAAI,SAAEH,KAAaT,GAAMkC,EAC1B,MAAMC,EAAMnC,EAAMmC,IAQZC,EAAW,OAAHD,QAAG,IAAHA,OAAG,EAAHA,EAAKhB,MAAM,uDACzB,OAAIiB,EACIA,EAAM,IACClC,EAAAA,EAAAA,IAAA,OAAKmC,IAAKrC,EAAMqC,IAAKF,IAAKC,EAAM,GAAIE,MAAOF,EAAM,MAEjDlC,EAAAA,EAAAA,IAAA,OAAKmC,IAAKrC,EAAMqC,IAAKF,IAAKC,EAAM,GAAIE,MAAOF,EAAM,GAAIG,OAAQH,EAAM,MAGvElC,EAAAA,EAAAA,IAAA,OAAKmC,IAAKrC,EAAMqC,IAAKF,IAAKnC,EAAMmC,KAE/C,E,wHCpCJ,QApBA,SAAkBnC,GAEd,MAAMwC,EAAYxC,EAAMyC,KAMxB,OAJAC,EAAAA,EAAAA,YAAU,KACNC,SAASC,MAAQJ,EAAUI,KAAK,GACjC,CAACJ,KAEGtC,EAAAA,EAAAA,IAAA,OAAK2C,UAAU,iBAClB3C,EAAAA,EAAAA,IAAA,WACIA,EAAAA,EAAAA,IAACC,EAAAA,EAAe,CAACC,KAAM0C,EAAAA,MAAS,IAAEN,EAAUI,QAEhD1C,EAAAA,EAAAA,IAAC6C,EAAAA,EAAQ,CACLC,cAAe,CAACC,EAAAA,GAChBC,WAAY5C,EAAAA,GACXkC,EAAUvC,SAGvB,C","sources":["components/Warning.tsx","helper/MarkdownComponents.tsx","pages/home/HomePage.tsx"],"sourcesContent":["import React from 'react'\n\nimport styled from '@emotion/styled';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faExclamationTriangle} from \"@fortawesome/free-solid-svg-icons\";\n\nconst WarningDiv = styled.div`\n    border: 1px solid black;\n    border-radius: 4px;\n    display: flex;\n    padding: 10px;\n\n    p {\n        padding: 0 10px;\n        margin: 0;\n    }\n`\n\ntype Props = {\n    content: any\n}\n\nexport default function Warning(props: Props) {\n    const {content} = props;\n\n    return (\n        <WarningDiv>\n            <div>\n                <FontAwesomeIcon icon={faExclamationTriangle}/>\n            </div>\n            {content}\n        </WarningDiv>\n    );\n}","import React, {useContext} from 'react'\nimport {Link} from 'react-router-dom'\nimport {LinksContext} from '../App'\nimport {Components} from \"react-markdown/lib\"\nimport Warning from \"../components/Warning\"\n\n// // @ts-ignore\n// remark.macros.img = function (altText, width) {\n//     var url = this;\n//     return '<img alt=\"' + altText + '\" src=\"' + url + '\" style=\"width: ' + width + '\" />';\n//   };\n\nexport const LinkComponent: Components = {\n    blockquote({children}) {\n        return <Warning content={children}/>\n    },\n    a({node, children, ...props}) {\n        /* eslint-disable */\n        const links = useContext(LinksContext)\n        const link = props.href\n\n        const linkMatch = link?.match('\\\\$(.*)\\\\$');\n        if (linkMatch) {\n            const foundLink = links.find((l) => {\n                return l['key'] == linkMatch[1]\n            })\n\n            if (!foundLink) {\n                return <Link to={props.href || ''}>{children}</Link>\n            }\n\n            if (foundLink['link']) {\n                return <a href={foundLink['link']} target=\"_blank\" rel=\"noreferrer\">{children}</a>\n            }\n\n            if (foundLink['slug']) {\n                return <Link to={'/' + foundLink['slug']}>{children}</Link>\n            }\n\n            return <Link to={props.href || ''}>{children}</Link>\n\n        }\n\n        const mailto = link?.match('(mailto:)')\n        if (mailto && mailto.length > 2 && mailto[1]) {\n            return <Link to='#'\n                         onClick={(e) => {\n                             window.location.href = props.href || '';\n                             e.preventDefault();\n                         }}>\n                {children}\n            </Link>\n        }\n        return <Link to={props.href || ''}>{children}</Link>\n    },\n    img({node, children, ...props}) {\n        const alt = props.alt\n        /*\n        * matches the following:\n        * alt: text, size: 50x50\n        * or\n        * alt: text, width: 50\n        * maybe later: alt.match('alt:\\\\s([\\\\w\\\\s\\-\\_\\*]*),?\\\\s?(size:\\\\s((\\\\d*)x(\\\\d*)))?,?\\\\s?(width:\\\\s(\\\\d*))?,?\\\\s?(float: (\\\\w*))?');\n        */\n        const found = alt?.match('alt: (.*), (size: ((\\\\d*)x(\\\\d*)))?(width: (\\\\d*))?');\n        if (found) {\n            if (found[7]) {\n                return <img src={props.src} alt={found[1]} width={found[7]}/>\n            } else {\n                return <img src={props.src} alt={found[1]} width={found[4]} height={found[5]}/>\n            }\n        } else {\n            return <img src={props.src} alt={props.alt}/>\n        }\n    }\n}","import React, {useEffect} from 'react'\nimport Markdown from 'react-markdown'\nimport remarkGfm from 'remark-gfm'\nimport {IconT} from '../section/components/Section'\nimport {LinkComponent} from \"../../helper/MarkdownComponents\"\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faHome} from \"@fortawesome/free-solid-svg-icons\";\n\nexport type StartPageT = {\n    title: string\n    menu_name: string\n    icon: IconT\n    content: string\n}\ntype Props = {\n    page: StartPageT\n}\n\nfunction HomePage(props: Props) {\n\n    const startPage = props.page\n\n    useEffect(() => {\n        document.title = startPage.title\n    }, [startPage])\n\n    return <div className='content-main'>\n        <h1>\n            <FontAwesomeIcon icon={faHome}/> {startPage.title}\n        </h1>\n        <Markdown\n            remarkPlugins={[remarkGfm]}\n            components={LinkComponent}>\n            {startPage.content}\n        </Markdown>\n    </div>\n}\n\nexport default HomePage"],"names":["WarningDiv","_styled","target","name","styles","Warning","props","content","___EmotionJSX","FontAwesomeIcon","icon","faExclamationTriangle","LinkComponent","blockquote","_ref","children","a","_ref2","node","links","useContext","LinksContext","link","href","linkMatch","match","foundLink","find","l","rel","Link","to","mailto","length","onClick","e","window","location","preventDefault","img","_ref3","alt","found","src","width","height","startPage","page","useEffect","document","title","className","faHome","Markdown","remarkPlugins","remarkGfm","components"],"sourceRoot":""}