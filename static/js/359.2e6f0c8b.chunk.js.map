{"version":3,"file":"static/js/359.2e6f0c8b.chunk.js","mappings":"+KASe,SAASA,EAAQC,GAC5B,MAAM,QAAEC,GAAYD,EAEpB,OACIE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,UAASC,SAAA,EACpBC,EAAAA,EAAAA,KAAA,OAAAD,UACIC,EAAAA,EAAAA,KAACC,EAAAA,EAAe,CAACC,KAAMC,EAAAA,QAE1BP,IAGb,CCRO,MAAMQ,EAA4B,CACrCC,UAAAA,CAAUC,GAAc,IAAb,SAACP,GAASO,EACjB,OAAON,EAAAA,EAAAA,KAACN,EAAO,CAACE,QAASG,GAC7B,EACAQ,KAAAA,CAAKC,GAAc,IAAb,SAACT,GAASS,EACZ,OAAOR,EAAAA,EAAAA,KAAA,OAAKF,UAAU,iBAAgBC,UAACC,EAAAA,EAAAA,KAAA,SAAAD,SAAQA,KACnD,EACAU,CAAAA,CAACC,GAA8B,IAA7B,KAACC,EAAI,SAAEZ,KAAaJ,GAAMe,EAExB,MAAME,GAAQC,EAAAA,EAAAA,YAAWC,EAAAA,GACnBC,EAAOpB,EAAMqB,KAEbC,EAAgB,OAAJF,QAAI,IAAJA,OAAI,EAAJA,EAAMG,MAAM,cAC9B,GAAID,EAAW,CACX,MAAME,EAAYP,EAAMQ,MAAMC,GACnBA,EAAO,KAAKJ,EAAU,KAGjC,OAAKE,EAIDA,EAAgB,MACTnB,EAAAA,EAAAA,KAAA,KAAGgB,KAAMG,EAAgB,KAAGG,OAAO,SAASC,IAAI,aAAYxB,SAAEA,IAGrEoB,EAAgB,MACTnB,EAAAA,EAAAA,KAACwB,EAAAA,GAAI,CAACC,GAAI,IAAMN,EAAgB,KAAEpB,SAAEA,KAGxCC,EAAAA,EAAAA,KAACwB,EAAAA,GAAI,CAACC,GAAI9B,EAAMqB,MAAQ,GAAGjB,SAAEA,KAXzBC,EAAAA,EAAAA,KAACwB,EAAAA,GAAI,CAACC,GAAI9B,EAAMqB,MAAQ,GAAGjB,SAAEA,GAa5C,CAEA,MAAM2B,EAAa,OAAJX,QAAI,IAAJA,OAAI,EAAJA,EAAMG,MAAM,aAC3B,OAAIQ,GAAUA,EAAOC,OAAS,GAAKD,EAAO,IAC/B1B,EAAAA,EAAAA,KAACwB,EAAAA,GAAI,CAACC,GAAG,IACHG,QAAUC,IACNC,OAAOC,SAASf,KAAOrB,EAAMqB,MAAQ,GACrCa,EAAEG,gBAAgB,EACpBjC,SACVA,KAGFC,EAAAA,EAAAA,KAACwB,EAAAA,GAAI,CAACC,GAAI9B,EAAMqB,MAAQ,GAAGjB,SAAEA,GACxC,EACAkC,GAAAA,CAAGC,GAA8B,IAA7B,KAACvB,EAAI,SAAEZ,KAAaJ,GAAMuC,EAC1B,MAAMC,EAAMxC,EAAMwC,IAQZC,EAAW,OAAHD,QAAG,IAAHA,OAAG,EAAHA,EAAKjB,MAAM,uDACzB,OAAIkB,EACIA,EAAM,IACCpC,EAAAA,EAAAA,KAAA,OAAKqC,IAAK1C,EAAM0C,IAAKF,IAAKC,EAAM,GAAIE,MAAOF,EAAM,MAEjDpC,EAAAA,EAAAA,KAAA,OAAKqC,IAAK1C,EAAM0C,IAAKF,IAAKC,EAAM,GAAIE,MAAOF,EAAM,GAAIG,OAAQH,EAAM,MAGvEpC,EAAAA,EAAAA,KAAA,OAAKqC,IAAK1C,EAAM0C,IAAKF,IAAKxC,EAAMwC,KAE/C,E,wHCtCJ,QAtBA,SAAuBxC,GAEnB,MAAM6C,EAAgB7C,EAAM8C,KAM5B,OAJAC,EAAAA,EAAAA,YAAU,KAAO,IAADC,EACZC,SAASC,MAA4B,QAAvBF,EAAgB,OAAbH,QAAa,IAAbA,OAAa,EAAbA,EAAeK,aAAK,IAAAF,EAAAA,EAAI,EAAE,GAC5C,CAACH,KAEGxC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,eAAcC,UAChCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,WAAUC,SAAA,EACrBF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIC,EAAAA,EAAAA,KAACC,EAAAA,EAAe,CAACC,KAAM4C,EAAAA,MAAe,IAAEN,EAAcK,UAE1D7C,EAAAA,EAAAA,KAAC+C,EAAAA,EAAQ,CACLC,cAAe,CAACC,EAAAA,GAChBC,WAAY9C,EAAAA,EAAcL,SACzByC,EAAc5C,cAI/B,C","sources":["components/warning/Warning.tsx","helper/MarkdownComponents.tsx","pages/impressum/ImpressumPage.tsx"],"sourcesContent":["import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faExclamationTriangle } from \"@fortawesome/free-solid-svg-icons\";\nimport './warning.less'\n\ntype Props = {\n    content: any\n}\n\nexport default function Warning(props: Props) {\n    const { content } = props;\n\n    return (\n        <div className=\"warning\">\n            <div>\n                <FontAwesomeIcon icon={faExclamationTriangle}/>\n            </div>\n            {content}\n        </div>\n    );\n}","import React, {useContext} from 'react'\nimport {Link} from 'react-router-dom'\nimport {LinksContext} from '../App'\nimport {Components} from \"react-markdown/lib\"\nimport Warning from \"../components/warning/Warning\"\n\n// // @ts-ignore\n// remark.macros.img = function (altText, width) {\n//     var url = this;\n//     return '<img alt=\"' + altText + '\" src=\"' + url + '\" style=\"width: ' + width + '\" />';\n//   };\n\nexport const LinkComponent: Components = {\n    blockquote({children}) {\n        return <Warning content={children}/>\n    },\n    table({children}) {\n        return <div className=\"table-overflow\"><table>{children}</table></div>\n    },\n    a({node, children, ...props}) {\n        /* eslint-disable */\n        const links = useContext(LinksContext)\n        const link = props.href\n\n        const linkMatch = link?.match('\\\\$(.*)\\\\$');\n        if (linkMatch) {\n            const foundLink = links.find((l) => {\n                return l['key'] == linkMatch[1]\n            })\n\n            if (!foundLink) {\n                return <Link to={props.href || ''}>{children}</Link>\n            }\n\n            if (foundLink['link']) {\n                return <a href={foundLink['link']} target=\"_blank\" rel=\"noreferrer\">{children}</a>\n            }\n\n            if (foundLink['slug']) {\n                return <Link to={'/' + foundLink['slug']}>{children}</Link>\n            }\n\n            return <Link to={props.href || ''}>{children}</Link>\n\n        }\n\n        const mailto = link?.match('(mailto:)')\n        if (mailto && mailto.length > 2 && mailto[1]) {\n            return <Link to='#'\n                         onClick={(e) => {\n                             window.location.href = props.href || '';\n                             e.preventDefault();\n                         }}>\n                {children}\n            </Link>\n        }\n        return <Link to={props.href || ''}>{children}</Link>\n    },\n    img({node, children, ...props}) {\n        const alt = props.alt\n        /*\n        * matches the following:\n        * alt: text, size: 50x50\n        * or\n        * alt: text, width: 50\n        * maybe later: alt.match('alt:\\\\s([\\\\w\\\\s\\-\\_\\*]*),?\\\\s?(size:\\\\s((\\\\d*)x(\\\\d*)))?,?\\\\s?(width:\\\\s(\\\\d*))?,?\\\\s?(float: (\\\\w*))?');\n        */\n        const found = alt?.match('alt: (.*), (size: ((\\\\d*)x(\\\\d*)))?(width: (\\\\d*))?');\n        if (found) {\n            if (found[7]) {\n                return <img src={props.src} alt={found[1]} width={found[7]}/>\n            } else {\n                return <img src={props.src} alt={found[1]} width={found[4]} height={found[5]}/>\n            }\n        } else {\n            return <img src={props.src} alt={props.alt}/>\n        }\n    }\n}","import React, {useEffect} from 'react'\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport Markdown from 'react-markdown';\nimport remarkGfm from 'remark-gfm';\nimport {LinkComponent} from '../../helper/MarkdownComponents';\nimport {faCircleInfo} from \"@fortawesome/free-solid-svg-icons\";\n\nexport type ImpressumPageT = {\n    title: string\n    menu_name: string\n    content: string\n}\n\ntype Props = {\n    page: ImpressumPageT\n}\n\nfunction ImpressumPage(props: Props) {\n\n    const impressumPage = props.page;\n\n    useEffect(() => {\n        document.title = impressumPage?.title ?? '';\n    }, [impressumPage]);\n\n    return <div className='content-main'>\n        <div className='calendar'>\n            <h1>\n                <FontAwesomeIcon icon={faCircleInfo}/> {impressumPage.title}\n            </h1>\n            <Markdown\n                remarkPlugins={[remarkGfm]}\n                components={LinkComponent}>\n                {impressumPage.content}\n            </Markdown>\n        </div>\n    </div>\n}\n\nexport default ImpressumPage\n"],"names":["Warning","props","content","_jsxs","className","children","_jsx","FontAwesomeIcon","icon","faExclamationTriangle","LinkComponent","blockquote","_ref","table","_ref2","a","_ref3","node","links","useContext","LinksContext","link","href","linkMatch","match","foundLink","find","l","target","rel","Link","to","mailto","length","onClick","e","window","location","preventDefault","img","_ref4","alt","found","src","width","height","impressumPage","page","useEffect","_impressumPage$title","document","title","faCircleInfo","Markdown","remarkPlugins","remarkGfm","components"],"sourceRoot":""}