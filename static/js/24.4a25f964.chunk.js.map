{"version":3,"file":"static/js/24.4a25f964.chunk.js","mappings":"sLAMA,MAAMA,GAAUC,EAAAA,EAAAA,GAAA,OAAAC,OAAA,aAAAD,CAAA,CAAAE,KAAA,SAAAC,OAAA,mGAgBD,SAASC,EAAQC,GAC5B,MAAM,QAACC,GAAWD,EAElB,OACIE,EAAAA,EAAAA,IAACR,EAAU,MACPQ,EAAAA,EAAAA,IAAA,YACIA,EAAAA,EAAAA,IAACC,EAAAA,EAAe,CAACC,KAAMC,EAAAA,OAE1BJ,EAGb,CCrBO,MAAMK,EAA4B,CACrCC,UAAAA,CAAUC,GAAc,IAAb,SAACC,GAASD,EACjB,OAAON,EAAAA,EAAAA,IAACH,EAAO,CAACE,QAASQ,GAC7B,EACAC,KAAAA,CAAKC,GAAc,IAAb,SAACF,GAASE,EACZ,OAAOT,EAAAA,EAAAA,IAAA,OAAKU,UAAU,mBAAiBV,EAAAA,EAAAA,IAAA,aAAQO,GACnD,EACAI,CAAAA,CAACC,GAA8B,IAA7B,KAACC,EAAI,SAAEN,KAAaT,GAAMc,EAExB,MAAME,GAAQC,EAAAA,EAAAA,YAAWC,EAAAA,GACnBC,EAAOnB,EAAMoB,KAEbC,EAAgB,OAAJF,QAAI,IAAJA,OAAI,EAAJA,EAAMG,MAAM,cAC9B,GAAID,EAAW,CACX,MAAME,EAAYP,EAAMQ,MAAMC,GACnBA,EAAO,KAAKJ,EAAU,KAGjC,OAAKE,EAIDA,EAAgB,MACTrB,EAAAA,EAAAA,IAAA,KAAGkB,KAAMG,EAAgB,KAAG3B,OAAO,SAAS8B,IAAI,cAAcjB,GAGrEc,EAAgB,MACTrB,EAAAA,EAAAA,IAACyB,EAAAA,GAAI,CAACC,GAAI,IAAML,EAAgB,MAAId,IAGxCP,EAAAA,EAAAA,IAACyB,EAAAA,GAAI,CAACC,GAAI5B,EAAMoB,MAAQ,IAAKX,IAXzBP,EAAAA,EAAAA,IAACyB,EAAAA,GAAI,CAACC,GAAI5B,EAAMoB,MAAQ,IAAKX,EAa5C,CAEA,MAAMoB,EAAa,OAAJV,QAAI,IAAJA,OAAI,EAAJA,EAAMG,MAAM,aAC3B,OAAIO,GAAUA,EAAOC,OAAS,GAAKD,EAAO,IAC/B3B,EAAAA,EAAAA,IAACyB,EAAAA,GAAI,CAACC,GAAG,IACHG,QAAUC,IACNC,OAAOC,SAASd,KAAOpB,EAAMoB,MAAQ,GACrCY,EAAEG,gBAAgB,GAE9B1B,IAGFP,EAAAA,EAAAA,IAACyB,EAAAA,GAAI,CAACC,GAAI5B,EAAMoB,MAAQ,IAAKX,EACxC,EACA2B,GAAAA,CAAGC,GAA8B,IAA7B,KAACtB,EAAI,SAAEN,KAAaT,GAAMqC,EAC1B,MAAMC,EAAMtC,EAAMsC,IAQZC,EAAW,OAAHD,QAAG,IAAHA,OAAG,EAAHA,EAAKhB,MAAM,uDACzB,OAAIiB,EACIA,EAAM,IACCrC,EAAAA,EAAAA,IAAA,OAAKsC,IAAKxC,EAAMwC,IAAKF,IAAKC,EAAM,GAAIE,MAAOF,EAAM,MAEjDrC,EAAAA,EAAAA,IAAA,OAAKsC,IAAKxC,EAAMwC,IAAKF,IAAKC,EAAM,GAAIE,MAAOF,EAAM,GAAIG,OAAQH,EAAM,MAGvErC,EAAAA,EAAAA,IAAA,OAAKsC,IAAKxC,EAAMwC,IAAKF,IAAKtC,EAAMsC,KAE/C,E,qJC5CJ,QAtBA,SAAqBtC,GAEjB,MAAM,EAAC2C,IAAKC,EAAAA,EAAAA,OACN,QAACC,EAAO,SAAEC,EAAQ,UAAEC,GAAa/C,EAEvC,OAAOE,EAAAA,EAAAA,IAAA,OAAKU,UAAU,iBAClBV,EAAAA,EAAAA,IAAA,OAAKU,UAAU,eACXV,EAAAA,EAAAA,IAAA,OAAKU,UAAU,SACXV,EAAAA,EAAAA,IAACC,EAAAA,EAAe,CAACC,KAAM4C,EAAAA,QAE3B9C,EAAAA,EAAAA,IAAA,SAAO+C,KAAK,OACLpD,KAAK,SACLe,UAAU,SACVsC,YAAaP,EAAE,gCACfQ,MAAON,EACPC,SAAUA,EACVC,UAAWA,EACXK,WAAS,KAG5B,E,YC/BO,MAAMC,EACT,cAAOC,CAAQC,GACX,GAAKA,EAGA,CACD,MAAMC,EAAgB,GAChBC,EAAQF,EAASG,MAAM,KAAKC,QAAOhB,GAAKA,EAAEb,OAAS,IAAG,QAAA8B,EAAAC,UAAA/B,OANhCgC,EAAM,IAAAC,MAAAH,EAAA,EAAAA,EAAA,KAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAANF,EAAME,EAAA,GAAAH,UAAAG,GAYlC,OAJAF,EAAOG,SAAQC,IACXC,KAAKC,qBAAqBF,EAAGV,EAAc,IAGxCC,EAAMY,OAAMC,GACRd,EAAce,MAAKpB,GAASgB,KAAKK,SAASrB,EAAOmB,MAEhE,CAbI,OAAO,CAcf,CAEA,mBAAOG,CAAalB,GAChB,GAAKA,EAGA,CACD,MAAMC,EAAgB,GAAY,QAAAkB,EAAAb,UAAA/B,OALDgC,EAAM,IAAAC,MAAAW,EAAA,EAAAA,EAAA,KAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAANb,EAAMa,EAAA,GAAAd,UAAAc,GAWvC,OAJAb,EAAOG,SAAQC,IACXC,KAAKC,qBAAqBF,EAAGV,EAAc,IAGxCA,EAAce,MAAKpB,GAASgB,KAAKK,SAASrB,EAAOI,IAC5D,CAVI,OAAO,CAWf,CAEA,2BAAea,CAAqBjB,EAAYK,GACxCL,aAAiByB,OACjBA,OAAOC,KAAK1B,GAAOc,SAAQa,IACvBX,KAAKC,qBAAqBjB,EAAM2B,GAAMtB,EAAc,SAGzCuB,IAAV5B,GAAiC,OAAVA,GAC5BK,EAAcwB,KAAK7B,EAE3B,CAEA,eAAeqB,CAASrB,EAAYmB,GAChC,MAAMW,GAAO9B,GAAS,IAAI+B,WAE1B,OAAOf,KAAKgB,UAAUF,GAAKG,SAASjB,KAAKgB,UAAUb,GACvD,CAEA,gBAAea,CAAUhC,GACrB,OAAOA,EAAMkC,cACRC,QAAQ,kBAAU,KAClBA,QAAQ,sBAAW,KACnBA,QAAQ,sBAAW,KACnBA,QAAQ,UAAQ,IACzB,ECyFJ,QA3HA,SAAoBtF,GAEhB,MAAM,EAAC2C,IAAKC,EAAAA,EAAAA,OACL2C,EAAcC,IAAmBC,EAAAA,EAAAA,MAElCC,GAAgBC,EAAAA,EAAAA,SAAgB,IAC/B9C,EAAS+C,IAAcC,EAAAA,EAAAA,UAAiB,KACxCC,EAAeC,IAAoBF,EAAAA,EAAAA,UAAyB,KAC5DG,EAAkBC,IAAuBJ,EAAAA,EAAAA,WAAkB,GAE5DK,GAAYP,EAAAA,EAAAA,UACZQ,GAA4BR,EAAAA,EAAAA,QAAmB3F,EAAMoG,SACtDC,QAAO,CAACC,EAAsBC,IAA6BD,EAASE,OAAOD,EAAeD,WAAW,KAEpGG,GAAgBC,EAAAA,EAAAA,cAAaC,IAC/BV,GAAoB,GAEhBC,EAAUU,SACVC,aAAaX,EAAUU,SAG3BV,EAAUU,QAAUE,YAAW,KAC3B,IAAKH,GAAkBA,EAAe7E,OAAS,EAG3C,OAFAiE,EAAiB,SACjBE,GAAoB,GAIxB,MAAMH,EAAgBK,EAA0BS,QAC3CjD,QAAOoD,GAAW1D,EAAaC,QAAQqD,EAAgB,CAACI,EAAQC,MAAOD,EAAQ9G,YAC/EgH,KAAIF,IACM,CACHG,GAAIH,EAAQG,GACZF,MAAOD,EAAQC,MACfG,iBAAkBC,EAAqBT,EAAgBI,EAAQ9G,SAC/DoH,KAAMN,EAAQO,sBAI1BvB,EAAiBD,GACjBG,GAAoB,GAEpBC,EAAUU,aAAU7B,CAAS,GAC9B,IAAI,GACR,KAEHwC,EAAAA,EAAAA,YAAU,KACN,IAAK7B,EAAckB,QAAS,CACxB,MAAMY,EAAgBjC,EAAakC,IAAI,WACnCD,IACA5B,EAAW4B,GACXf,EAAce,GAEtB,CAEA9B,EAAckB,SAAU,CAAI,GAC7B,CAACrB,EAAckB,IAElB,MAAMW,EAAuBA,CAACvE,EAAiB5C,KAC3C,MAAMyH,EAAoB,IAAIC,OAAO,yBAA0B,OAEzDC,EAAe,IAAID,OAAO,kBAADnB,OAAmB3D,EAAO,2BAA6B,OAEhFgF,EAAkB5H,EAAQqF,QAAQoC,EAAmB,IAG3D,OAFgB3D,MAAM+D,KAAKD,EAAgBE,SAASH,IAErCvB,QAAO,CAACP,EAAyBkC,IAAqClC,EAAcU,OAAOwB,IACtG,GAAG,EA8CX,OAAO9H,EAAAA,EAAAA,IAAA+H,EAAAA,SAAA,MACH/H,EAAAA,EAAAA,IAACgI,EAAW,CAACrF,QAASA,EAASC,SA5CVd,IAAgD,IAADmG,EAAAC,EACpEpG,EAAEG,iBACF,MAAMU,EAAgC,QAAzBsF,EAAkB,QAAlBC,EAAGpG,EAAEqG,qBAAa,IAAAD,OAAA,EAAfA,EAAiBjF,aAAK,IAAAgF,EAAAA,EAAI,GAE1CvC,EAAW/C,GACX,MAAMyF,EAAczF,EAAQf,OAAS,EAC/B,CAAC,QAAWe,QACZkC,EACNS,EAAgB8C,EAAa,CAAChD,SAAS,IAEvCmB,EAAc5D,EAAQ,KAmCtB3C,EAAAA,EAAAA,IAAA,YACAA,EAAAA,EAAAA,IAACqI,EAAAA,EAAO,CAACC,UAAWxC,KACpB9F,EAAAA,EAAAA,IAAA,OAAKU,UAAU,kBAjCVoF,EA0BE,KAzBCnD,EAAQf,QAAU,EACdgE,EAAchE,OAAS,EAChBgE,EAAcmB,KAAIwB,IACdvI,EAAAA,EAAAA,IAAA,OAAK4E,IAAK2D,EAAOvB,GAAItG,UAAU,kBAClCV,EAAAA,EAAAA,IAAA,OAAKU,UAAU,gBACXV,EAAAA,EAAAA,IAACyB,EAAAA,GAAI,CAACC,GAAI,IAAM6G,EAAOpB,MAAOoB,EAAOzB,QAExCyB,EAAOtB,iBAAiBrF,OAAS,GAC9B5B,EAAAA,EAAAA,IAAA,OAAKU,UAAU,iBACV6H,EAAOtB,iBAAiBF,KAAI,CAAChH,EAASyI,KAC5BxI,EAAAA,EAAAA,IAACyI,EAAAA,EAAQ,CAAC7D,IAAK4D,EACLE,cAAe,CAACC,EAAAA,GAChBC,WAAYxI,EAAAA,GAAgBL,MAGnD,SAMXC,EAAAA,EAAAA,IAAA,WAAMyC,EAAE,0BAEZzC,EAAAA,EAAAA,IAAA,WAAK,IAAEyC,EAAE,uBAAwB,CAACoG,mBAAoB,MAazE,E,0jCC5EA,QA7CA,SAAoB/I,GAEhB,MAAMgJ,EAAOC,EAAAA,EAAKC,UACXC,EAAYC,IAAiBvD,EAAAA,EAAAA,YAuBpC,OArBA0B,EAAAA,EAAAA,YAAU,KAAO,IAAD8B,EACZC,SAAStC,MAAyB,QAApBqC,EAAa,OAAVF,QAAU,IAAVA,OAAU,EAAVA,EAAYnC,aAAK,IAAAqC,EAAAA,EAAI,EAAE,GACzC,CAACF,KAEJ5B,EAAAA,EAAAA,YAAU,KACN,OAAQ0B,EAAAA,EAAKC,UACT,IAAK,KAML,QACI,OAAOE,EAAcG,GALzB,IAAK,KACD,OAAOH,EAAcI,GACzB,IAAK,KACD,OAAOJ,EAAcK,GAG7B,GACD,CAACT,KAEJzB,EAAAA,EAAAA,YAAU,KAAO,IAADmC,EACZJ,SAAStC,MAAyB,QAApB0C,EAAa,OAAVP,QAAU,IAAVA,OAAU,EAAVA,EAAYnC,aAAK,IAAA0C,EAAAA,EAAI,EAAE,GACzC,CAACP,IAECA,GAIEjJ,EAAAA,EAAAA,IAAA,OAAKU,UAAU,iBAClBV,EAAAA,EAAAA,IAAA,OAAKU,UAAU,WACXV,EAAAA,EAAAA,IAAA,WACIA,EAAAA,EAAAA,IAACC,EAAAA,EAAe,CAACC,KAAM4C,EAAAA,MAAW,IAAEmG,EAAWnC,QAEnD9G,EAAAA,EAAAA,IAACyI,EAAAA,EAAQ,CAACC,cAAe,CAACC,EAAAA,GAChBC,WAAYxI,EAAAA,GACjB6I,EAAWlJ,UAGhBC,EAAAA,EAAAA,IAACyJ,EAAU,CAACvD,SAAUpG,EAAMoG,aAbzB,IAgBf,C","sources":["components/Warning.tsx","helper/MarkdownComponents.tsx","pages/search/components/SearchInput.tsx","helper/SearchHelper.tsx","pages/search/components/SearchForm.tsx","pages/search/SearchPage.tsx"],"sourcesContent":["import React from 'react'\n\nimport styled from '@emotion/styled';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faExclamationTriangle} from \"@fortawesome/free-solid-svg-icons\";\n\nconst WarningDiv = styled.div`\n    border: 1px solid black;\n    border-radius: 4px;\n    display: flex;\n    padding: 10px;\n\n    p {\n        padding: 0 10px;\n        margin: 0;\n    }\n`\n\ntype Props = {\n    content: any\n}\n\nexport default function Warning(props: Props) {\n    const {content} = props;\n\n    return (\n        <WarningDiv>\n            <div>\n                <FontAwesomeIcon icon={faExclamationTriangle}/>\n            </div>\n            {content}\n        </WarningDiv>\n    );\n}","import React, {useContext} from 'react'\nimport {Link} from 'react-router-dom'\nimport {LinksContext} from '../App'\nimport {Components} from \"react-markdown/lib\"\nimport Warning from \"../components/Warning\"\n\n// // @ts-ignore\n// remark.macros.img = function (altText, width) {\n//     var url = this;\n//     return '<img alt=\"' + altText + '\" src=\"' + url + '\" style=\"width: ' + width + '\" />';\n//   };\n\nexport const LinkComponent: Components = {\n    blockquote({children}) {\n        return <Warning content={children}/>\n    },\n    table({children}) {\n        return <div className=\"table-overflow\"><table>{children}</table></div>\n    },\n    a({node, children, ...props}) {\n        /* eslint-disable */\n        const links = useContext(LinksContext)\n        const link = props.href\n\n        const linkMatch = link?.match('\\\\$(.*)\\\\$');\n        if (linkMatch) {\n            const foundLink = links.find((l) => {\n                return l['key'] == linkMatch[1]\n            })\n\n            if (!foundLink) {\n                return <Link to={props.href || ''}>{children}</Link>\n            }\n\n            if (foundLink['link']) {\n                return <a href={foundLink['link']} target=\"_blank\" rel=\"noreferrer\">{children}</a>\n            }\n\n            if (foundLink['slug']) {\n                return <Link to={'/' + foundLink['slug']}>{children}</Link>\n            }\n\n            return <Link to={props.href || ''}>{children}</Link>\n\n        }\n\n        const mailto = link?.match('(mailto:)')\n        if (mailto && mailto.length > 2 && mailto[1]) {\n            return <Link to='#'\n                         onClick={(e) => {\n                             window.location.href = props.href || '';\n                             e.preventDefault();\n                         }}>\n                {children}\n            </Link>\n        }\n        return <Link to={props.href || ''}>{children}</Link>\n    },\n    img({node, children, ...props}) {\n        const alt = props.alt\n        /*\n        * matches the following:\n        * alt: text, size: 50x50\n        * or\n        * alt: text, width: 50\n        * maybe later: alt.match('alt:\\\\s([\\\\w\\\\s\\-\\_\\*]*),?\\\\s?(size:\\\\s((\\\\d*)x(\\\\d*)))?,?\\\\s?(width:\\\\s(\\\\d*))?,?\\\\s?(float: (\\\\w*))?');\n        */\n        const found = alt?.match('alt: (.*), (size: ((\\\\d*)x(\\\\d*)))?(width: (\\\\d*))?');\n        if (found) {\n            if (found[7]) {\n                return <img src={props.src} alt={found[1]} width={found[7]}/>\n            } else {\n                return <img src={props.src} alt={found[1]} width={found[4]} height={found[5]}/>\n            }\n        } else {\n            return <img src={props.src} alt={props.alt}/>\n        }\n    }\n}","import React from \"react\"\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\"\nimport {useTranslation} from \"react-i18next\"\nimport {faSearch} from \"@fortawesome/free-solid-svg-icons\";\n\ntype Props = {\n    keyword?: string,\n    onChange?: (e: React.FormEvent<HTMLInputElement>) => void,\n    onKeyDown?: (e: React.KeyboardEvent<HTMLInputElement>) => void\n}\n\nfunction SearchInput(props: Props) {\n\n    const {t} = useTranslation()\n    const {keyword, onChange, onKeyDown} = props\n\n    return <div className='search-input'>\n        <div className='icon-input'>\n            <div className='icon'>\n                <FontAwesomeIcon icon={faSearch}/>\n            </div>\n            <input type='text'\n                   name='search'\n                   className='search'\n                   placeholder={t('searchPage.searchPlaceholder')}\n                   value={keyword}\n                   onChange={onChange}\n                   onKeyDown={onKeyDown}\n                   autoFocus/>\n        </div>\n    </div>\n}\n\nexport default SearchInput","export class SearchHelper {\n    static matches(keywords: string, ...values: any[]) {\n        if (!keywords) {\n            return true;\n        }\n        else {\n            const keywordValues = [] as any[];\n            const terms = keywords.split(' ').filter(t => t.length > 0);\n\n            values.forEach(v => {\n                this.extractKeywordValues(v, keywordValues);\n            });\n\n            return terms.every(term => {\n                return keywordValues.some(value => this.contains(value, term));\n            });\n        }\n    }\n\n    static matchesExact(keywords: string, ...values: any[]) {\n        if (!keywords) {\n            return true;\n        }\n        else {\n            const keywordValues = [] as any[];\n\n            values.forEach(v => {\n                this.extractKeywordValues(v, keywordValues);\n            });\n\n            return keywordValues.some(value => this.contains(value, keywords));\n        }\n    }\n\n    private static extractKeywordValues(value: any, keywordValues: any[]) {\n        if (value instanceof Object) {\n            Object.keys(value).forEach(key => {\n                this.extractKeywordValues(value[key], keywordValues);\n            });\n        }\n        else if (value !== undefined && value !== null) {\n            keywordValues.push(value);\n        }\n    }\n\n    private static contains(value: any, term: string) {\n        const str = (value || '').toString() as string;\n\n        return this.normalize(str).includes(this.normalize(term));\n    }\n\n    private static normalize(value: string) {\n        return value.toLowerCase()\n            .replace(/[éèë]/g, 'e')\n            .replace(/[àáäã]/g, 'a')\n            .replace(/[òóöõ]/g, 'o')\n            .replace(/[ü]/g, 'u');\n    }\n}","import React, {useCallback, useEffect, useRef, useState} from 'react'\nimport {useTranslation} from \"react-i18next\"\nimport Loading from '../../../components/loading/Loading'\nimport {ChapterT} from '../../section/components/Chapter';\nimport Markdown from 'react-markdown';\nimport remarkGfm from 'remark-gfm';\nimport {LinkComponent} from '../../../helper/MarkdownComponents';\nimport SearchInput from './SearchInput';\nimport {Link, useSearchParams} from \"react-router-dom\";\nimport {SearchHelper} from \"../../../helper/SearchHelper\";\nimport {SectionT} from \"../../section/SectionPage\";\n\ntype Props = {\n    sections: SectionT[]\n}\n\ntype SearchResult = {\n    id: number\n    title: string\n    matchingContents: string[]\n    slug: string\n}\n\nfunction SearchForm(props: Props) {\n\n    const {t} = useTranslation()\n    const [searchParams, setSearchParams] = useSearchParams();\n\n    const isQueryLoaded = useRef<boolean>(false);\n    const [keyword, setKeyword] = useState<string>('')\n    const [searchResults, setSearchResults] = useState<SearchResult[]>([])\n    const [isLoadingResults, setIsLoadingResults] = useState<boolean>(false)\n\n    const timeoutId = useRef<NodeJS.Timeout | undefined>();\n    const searchableSectionChapters = useRef<ChapterT[]>(props.sections\n        .reduce((chapters: ChapterT[], currentSection: SectionT) => chapters.concat(currentSection.chapters), []))\n\n    const executeSearch = useCallback((currentKeyword: string) => {\n        setIsLoadingResults(true)\n\n        if (timeoutId.current) {\n            clearTimeout(timeoutId.current);\n        }\n\n        timeoutId.current = setTimeout(() => {\n            if (!currentKeyword || currentKeyword.length < 3) {\n                setSearchResults([])\n                setIsLoadingResults(false)\n                return\n            }\n\n            const searchResults = searchableSectionChapters.current\n                .filter(chapter => SearchHelper.matches(currentKeyword, [chapter.title, chapter.content]))\n                .map(chapter => {\n                    return {\n                        id: chapter.id,\n                        title: chapter.title,\n                        matchingContents: findMatchingContents(currentKeyword, chapter.content),\n                        slug: chapter.slug_with_section\n                    } as SearchResult\n                })\n\n            setSearchResults(searchResults)\n            setIsLoadingResults(false)\n\n            timeoutId.current = undefined;\n        }, 500)\n    }, [])\n\n    useEffect(() => {\n        if (!isQueryLoaded.current) {\n            const searchKeyword = searchParams.get('keyword')\n            if (searchKeyword) {\n                setKeyword(searchKeyword)\n                executeSearch(searchKeyword)\n            }\n        }\n\n        isQueryLoaded.current = true;\n    }, [searchParams, executeSearch]);\n\n    const findMatchingContents = (keyword: string, content: string): string[] => {\n        const markdownLinkRegex = new RegExp('!?\\\\[(.*?)]\\\\((.*?)\\\\)', 'gmi')\n        // eslint-disable-next-line\n        const keywordRegex = new RegExp(`[^.!?:;#\\n]*(?=${keyword}).*?[.!?](?=\\s?|\\p{Lu}|$)`, 'gmi')\n\n        const filteredContent = content.replace(markdownLinkRegex, '') // Remove Markdown links from search results\n        const matches = Array.from(filteredContent.matchAll(keywordRegex))\n\n        return matches.reduce((searchResults: string[], currentMatches: RegExpMatchArray) => searchResults.concat(currentMatches),\n            [])\n    }\n\n    const onChangeKeyword = (e: React.FormEvent<HTMLInputElement>): void => {\n        e.preventDefault();\n        const keyword = e.currentTarget?.value ?? ''\n\n        setKeyword(keyword)\n        const queryParams = keyword.length > 0\n            ? {'keyword': keyword}\n            : undefined;\n        setSearchParams(queryParams, {replace: true})\n\n        executeSearch(keyword)\n    }\n\n    const searchResultViews = () => {\n        if (!isLoadingResults) {\n            if (keyword.length >= 3) {\n                if (searchResults.length > 0) {\n                    return searchResults.map(result => {\n                        return <div key={result.id} className='search-result'>\n                            <div className='title-match'>\n                                <Link to={'/' + result.slug}>{result.title}</Link>\n                            </div>\n                            {result.matchingContents.length > 0 ?\n                                <div className='content-match'>\n                                    {result.matchingContents.map((content, idx) => {\n                                        return <Markdown key={idx}\n                                                         remarkPlugins={[remarkGfm]}\n                                                         components={LinkComponent}>{content}</Markdown>\n                                    })}\n                                </div>\n                                : null\n                            }\n                        </div>\n                    })\n                }\n\n                return <div>{t('searchPage.noResults')}</div>\n            }\n            return <div> {t('searchPage.noKeyword', {amountOfCharacters: 3})}</div>\n        }\n        return null\n    }\n\n    return <>\n        <SearchInput keyword={keyword} onChange={onChangeKeyword}/>\n        <br/>\n        <Loading isLoading={isLoadingResults}></Loading>\n        <div className='search-results'>\n            {searchResultViews()}\n        </div>\n    </>\n}\n\nexport default SearchForm","import React, {useEffect, useState} from 'react'\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport Markdown from 'react-markdown'\nimport remarkGfm from 'remark-gfm'\nimport {LinkComponent} from '../../helper/MarkdownComponents'\nimport i18n from '../../i18n'\nimport SearchForm from './components/SearchForm'\nimport searchPageDE from \"../../data/search-page/de.json\"\nimport searchPageFR from \"../../data/search-page/fr.json\"\nimport searchPageIT from \"../../data/search-page/it.json\"\nimport {faSearch} from \"@fortawesome/free-solid-svg-icons\"\nimport './search.less'\nimport {SectionT} from \"../section/SectionPage\";\n\ntype Props = {\n    sections: SectionT[]\n}\n\nexport type SearchPageT = {\n    title: string\n    content: string\n}\n\nfunction SearchPage(props: Props) {\n\n    const lang = i18n.language\n    const [searchPage, setSearchPage] = useState<SearchPageT>();\n\n    useEffect(() => {\n        document.title = searchPage?.title ?? '';\n    }, [searchPage]);\n\n    useEffect(() => {\n        switch (i18n.language) {\n            case 'de':\n                return setSearchPage(searchPageDE)\n            case 'fr':\n                return setSearchPage(searchPageFR)\n            case 'it':\n                return setSearchPage(searchPageIT)\n            default:\n                return setSearchPage(searchPageDE)\n        }\n    }, [lang])\n\n    useEffect(() => {\n        document.title = searchPage?.title ?? '';\n    }, [searchPage])\n\n    if (!searchPage) {\n        return null\n    }\n\n    return <div className='content-main'>\n        <div className='search'>\n            <h1>\n                <FontAwesomeIcon icon={faSearch}/> {searchPage.title}\n            </h1>\n            <Markdown remarkPlugins={[remarkGfm]}\n                      components={LinkComponent}>\n                {searchPage.content}\n            </Markdown>\n\n            <SearchForm sections={props.sections}/>\n        </div>\n    </div>\n}\n\nexport default SearchPage"],"names":["WarningDiv","_styled","target","name","styles","Warning","props","content","___EmotionJSX","FontAwesomeIcon","icon","faExclamationTriangle","LinkComponent","blockquote","_ref","children","table","_ref2","className","a","_ref3","node","links","useContext","LinksContext","link","href","linkMatch","match","foundLink","find","l","rel","Link","to","mailto","length","onClick","e","window","location","preventDefault","img","_ref4","alt","found","src","width","height","t","useTranslation","keyword","onChange","onKeyDown","faSearch","type","placeholder","value","autoFocus","SearchHelper","matches","keywords","keywordValues","terms","split","filter","_len","arguments","values","Array","_key","forEach","v","this","extractKeywordValues","every","term","some","contains","matchesExact","_len2","_key2","Object","keys","key","undefined","push","str","toString","normalize","includes","toLowerCase","replace","searchParams","setSearchParams","useSearchParams","isQueryLoaded","useRef","setKeyword","useState","searchResults","setSearchResults","isLoadingResults","setIsLoadingResults","timeoutId","searchableSectionChapters","sections","reduce","chapters","currentSection","concat","executeSearch","useCallback","currentKeyword","current","clearTimeout","setTimeout","chapter","title","map","id","matchingContents","findMatchingContents","slug","slug_with_section","useEffect","searchKeyword","get","markdownLinkRegex","RegExp","keywordRegex","filteredContent","from","matchAll","currentMatches","React","SearchInput","_e$currentTarget$valu","_e$currentTarget","currentTarget","queryParams","Loading","isLoading","result","idx","Markdown","remarkPlugins","remarkGfm","components","amountOfCharacters","lang","i18n","language","searchPage","setSearchPage","_searchPage$title","document","searchPageDE","searchPageFR","searchPageIT","_searchPage$title2","SearchForm"],"sourceRoot":""}