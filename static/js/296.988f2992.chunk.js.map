{"version":3,"file":"static/js/296.988f2992.chunk.js","mappings":"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","sources":["components/Warning.tsx","helper/MarkdownComponents.tsx","pages/calendar/components/Task.tsx","pages/calendar/components/CalendarTable.tsx","pages/calendar/components/IcsDownload.tsx","pages/calendar/components/CsvDownload.tsx","pages/calendar/components/CalendarForm.tsx","pages/calendar/CalendarPage.tsx"],"sourcesContent":["import React from 'react'\n\nimport styled from '@emotion/styled';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faExclamationTriangle} from \"@fortawesome/free-solid-svg-icons\";\n\nconst WarningDiv = styled.div`\n    border: 1px solid black;\n    border-radius: 4px;\n    display: flex;\n    padding: 10px;\n\n    p {\n        padding: 0 10px;\n        margin: 0;\n    }\n`\n\ntype Props = {\n    content: any\n}\n\nexport default function Warning(props: Props) {\n    const {content} = props;\n\n    return (\n        <WarningDiv>\n            <div>\n                <FontAwesomeIcon icon={faExclamationTriangle}/>\n            </div>\n            {content}\n        </WarningDiv>\n    );\n}","import React, {useContext} from 'react'\nimport {Link} from 'react-router-dom'\nimport {LinksContext} from '../App'\nimport {Components} from \"react-markdown/lib\"\nimport Warning from \"../components/Warning\"\n\n// // @ts-ignore\n// remark.macros.img = function (altText, width) {\n//     var url = this;\n//     return '<img alt=\"' + altText + '\" src=\"' + url + '\" style=\"width: ' + width + '\" />';\n//   };\n\nexport const LinkComponent: Components = {\n    blockquote({children}) {\n        return <Warning content={children}/>\n    },\n    a({node, children, ...props}) {\n        /* eslint-disable */\n        const links = useContext(LinksContext)\n        const link = props.href\n\n        const linkMatch = link?.match('\\\\$(.*)\\\\$');\n        if (linkMatch) {\n            const foundLink = links.find((l) => {\n                return l['key'] == linkMatch[1]\n            })\n\n            if (!foundLink) {\n                return <Link to={props.href || ''}>{children}</Link>\n            }\n\n            if (foundLink['link']) {\n                return <a href={foundLink['link']} target=\"_blank\" rel=\"noreferrer\">{children}</a>\n            }\n\n            if (foundLink['slug']) {\n                return <Link to={'/' + foundLink['slug']}>{children}</Link>\n            }\n\n            return <Link to={props.href || ''}>{children}</Link>\n\n        }\n\n        const mailto = link?.match('(mailto:)')\n        if (mailto && mailto.length > 2 && mailto[1]) {\n            return <Link to='#'\n                         onClick={(e) => {\n                             window.location.href = props.href || '';\n                             e.preventDefault();\n                         }}>\n                {children}\n            </Link>\n        }\n        return <Link to={props.href || ''}>{children}</Link>\n    },\n    img({node, children, ...props}) {\n        const alt = props.alt\n        /*\n        * matches the following:\n        * alt: text, size: 50x50\n        * or\n        * alt: text, width: 50\n        * maybe later: alt.match('alt:\\\\s([\\\\w\\\\s\\-\\_\\*]*),?\\\\s?(size:\\\\s((\\\\d*)x(\\\\d*)))?,?\\\\s?(width:\\\\s(\\\\d*))?,?\\\\s?(float: (\\\\w*))?');\n        */\n        const found = alt?.match('alt: (.*), (size: ((\\\\d*)x(\\\\d*)))?(width: (\\\\d*))?');\n        if (found) {\n            if (found[7]) {\n                return <img src={props.src} alt={found[1]} width={found[7]}/>\n            } else {\n                return <img src={props.src} alt={found[1]} width={found[4]} height={found[5]}/>\n            }\n        } else {\n            return <img src={props.src} alt={props.alt}/>\n        }\n    }\n}","import React from 'react'\nimport {useTranslation} from 'react-i18next';\nimport {ChapterT, Role} from '../../section/components/Chapter';\nimport {Link} from \"react-router-dom\";\nimport {format} from \"date-fns\";\n\nexport type TaskT = {\n    deadline: Date\n    title: string\n    targets: Role[]\n    responsible: Role[]\n    chapters: ChapterT[]\n}\n\nfunction Task(props: TaskT) {\n\n    const {t} = useTranslation()\n\n    const targets = props.targets\n        .map((target) => target['rolle'])\n        .join(', ')\n    const responsible = props.responsible\n        .map((responsible) => t(`target.role.${responsible['rolle']}`))\n        .join(', ')\n\n    const chapters = props.chapters.map((chapter: ChapterT) => {\n        return <li key={chapter.slug}>\n            <Link to={'/' + chapter.section.slug + '#' + chapter.slug}>{chapter.title}</Link>\n        </li>\n    })\n\n    return <tr>\n        <td>{format(props.deadline, 'dd.MM.yyyy')}</td>\n        <td>{props.title}</td>\n        <td>{responsible}</td>\n        <td>{targets}</td>\n        <td>\n            <ul>{chapters}</ul>\n        </td>\n    </tr>\n}\n\nexport default Task","import React from 'react'\nimport Task, {TaskT} from './Task';\nimport {useTranslation} from \"react-i18next\";\n\ntype Props = {\n    tasks: TaskT[]\n    prefix: string\n}\n\nfunction CalendarTable(props: Props) {\n\n    const tasks = props.tasks;\n    const {t} = useTranslation()\n\n    const taskList = tasks.map(function (task) {\n        return <Task deadline={task.deadline} key={task.title} title={task.title}\n                     targets={task.targets} responsible={task.responsible} chapters={task.chapters}></Task>\n    })\n    \n    return (\n        <div className='calendar-table'>\n            <table>\n                <thead>\n                <tr>\n                    <td id=\"when\">{t('calendarPage.table.when')}</td>\n                    <td id=\"what\">{t('calendarPage.table.what')}</td>\n                    <td id=\"who\">{t('calendarPage.table.who')}</td>\n                    <td id=\"target\">{t('calendarPage.table.target')}</td>\n                    <td id=\"chapters\">{t('calendarPage.table.chapters')}</td>\n                </tr>\n                </thead>\n                <tbody>\n                {taskList}\n                </tbody>\n            </table>\n        </div>\n    );\n}\n\nexport default CalendarTable","import React, {useEffect, useState} from 'react'\nimport {TaskT} from './Task'\nimport {ChapterT} from '../../section/components/Chapter'\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport {useTranslation} from \"react-i18next\"\nimport {faCalendarDays} from \"@fortawesome/free-solid-svg-icons\";\n\ntype Props = {\n    tasks: TaskT[]\n    calendarTitlePrefix: string\n}\n\nfunction buildDescription(task: TaskT): string {\n    return task.chapters\n        .map((chapter: ChapterT) => chapter.slug_with_section)\n        .join(',')\n}\n\nfunction buildLinks(task: TaskT): string {\n    return task.chapters\n        .map((chapter: ChapterT) => 'https://scout-ch.github.io/hering/' + chapter.slug_with_section)\n        .join(',')\n}\n\nasync function generateIcsLink(tasks: TaskT[], calendarTitlePrefix: string): Promise<string> {\n    const ics = require('ics')\n\n    const events = tasks.map(function (task) {\n        const deadline = task.deadline\n        const alarms = []\n\n        alarms.push({\n            action: 'display',\n            description: buildDescription(task),\n            trigger: {hours: 1, before: true},\n        })\n\n        return {\n            start: [deadline.getFullYear(), deadline.getMonth() + 1, deadline.getDate()],\n            end: [deadline.getFullYear(), deadline.getMonth() + 1, deadline.getDate()],\n            title: `${calendarTitlePrefix} ${task.title}`,\n            description: buildLinks(task),\n            url: buildLinks(task),\n            status: 'CONFIRMED',\n            busyStatus: 'FREE',\n            alarms: alarms\n        }\n    })\n\n    return new Promise((resolve, reject) => {\n        ics.createEvents(events, (error: any, value: any) => {\n            if (error) {\n                reject(error)\n                return\n            }\n\n            if (!value) {\n                reject('invalid ics value')\n                return\n            }\n\n            const data = new Blob([value], {type: 'text/calendar'});\n            const link = window.URL.createObjectURL(data);\n            resolve(link)\n        })\n    })\n}\n\nfunction IcsDownload(props: Props) {\n\n    const {t} = useTranslation();\n    const [downloadLink, setDownloadLink] = useState<string>();\n\n    useEffect(() => {\n        const prepareDownloadLink = async () => {\n            if (!props.tasks || props.tasks.length === 0) {\n                setDownloadLink('')\n                return\n            }\n\n            const downloadLink = await generateIcsLink(props.tasks, props.calendarTitlePrefix);\n            setDownloadLink(downloadLink)\n        }\n\n        prepareDownloadLink()\n    }, [props.tasks, props.calendarTitlePrefix]);\n\n\n    if (!downloadLink || downloadLink.length === 0) {\n        return <div></div>\n    }\n\n    const spacedCalendarPrefix = (props.calendarTitlePrefix ?? '').length > 0\n        ? props.calendarTitlePrefix + ' '\n        : ''\n\n    return (\n        <a className=\"download-btn\" id=\"ics-download\"\n           download={t('calendarPage.ics.filename', {calendarTitlePrefix: spacedCalendarPrefix})}\n           href={downloadLink}>\n            <FontAwesomeIcon icon={faCalendarDays}/>\n            {t('calendarPage.ics.download')}\n        </a>\n    );\n}\n\nexport default IcsDownload","import {TaskT} from \"./Task\";\nimport {useTranslation} from \"react-i18next\";\nimport React, {useEffect, useState} from \"react\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {ChapterT} from \"../../section/components/Chapter\";\nimport {format} from \"date-fns\";\nimport {faFileCsv} from \"@fortawesome/free-solid-svg-icons\";\n\ntype Props = {\n    tasks: TaskT[]\n    calendarTitlePrefix: string\n}\n\nfunction buildLinks(task: TaskT): string {\n    return task.chapters\n        .map((chapter: ChapterT) => 'https://scout-ch.github.io/hering/' + chapter.slug_with_section)\n        .join(', ')\n}\n\nfunction CsvDownload(props: Props) {\n\n    const {t} = useTranslation();\n    const [downloadLink, setDownloadLink] = useState<string>();\n\n    useEffect(() => {\n        const generateCsv = (tasks: TaskT[]): string => {\n            // Headers\n            let csvContent = `${t('calendarPage.table.when')},${t('calendarPage.table.what')},${t('calendarPage.table.who')},${t('calendarPage.table.target')},${t('calendarPage.table.chapters')}\\n`;\n\n            tasks.forEach(task => {\n                const responsible = task.responsible\n                    .map(responsible => t(`target.role.${responsible['rolle']}`))\n                    .join(', ')\n                const targets = task.targets\n                    .map(target => target['rolle'])\n                    .join(', ')\n\n                const row = [\n                    format(task.deadline, 'yyyy-MM-dd'),\n                    `\"${task.title}\"`,\n                    `\"${responsible}\"`,\n                    `\"${targets}\"`,\n                    `\"${buildLinks(task)}\"`\n                ].join(',');\n\n                csvContent += row + '\\n';\n            });\n\n            const blob = new Blob([csvContent], {type: 'text/csv;charset=utf-8;'});\n            return URL.createObjectURL(blob);\n        }\n\n        const prepareDownloadLink = () => {\n            if (!props.tasks || props.tasks.length === 0) {\n                setDownloadLink('')\n                return\n            }\n\n            const downloadLink = generateCsv(props.tasks);\n            setDownloadLink(downloadLink)\n        }\n\n        prepareDownloadLink()\n    }, [props.tasks, props.calendarTitlePrefix, t]);\n\n\n    if (!downloadLink || downloadLink.length === 0) {\n        return <div></div>\n    }\n\n    const spacedCalendarPrefix = (props.calendarTitlePrefix ?? '').length > 0\n        ? props.calendarTitlePrefix + ' '\n        : ''\n\n    return (\n        <a className=\"download-btn\" id=\"csv-download\"\n           download={t('calendarPage.csv.filename', {calendarTitlePrefix: spacedCalendarPrefix})}\n           href={downloadLink}>\n            <FontAwesomeIcon icon={faFileCsv}/>\n            {t('calendarPage.csv.download')}\n        </a>\n    );\n}\n\nexport default CsvDownload","import React, {ChangeEvent, FormEvent, useCallback, useEffect, useState} from 'react'\nimport {useTranslation} from 'react-i18next';\nimport i18n from '../../../i18n';\nimport CalendarTable from './CalendarTable';\nimport {ChapterT} from '../../section/components/Chapter';\nimport {TaskT} from './Task';\nimport client from '../../../client';\nimport {addDays, format, parse, startOfDay} from \"date-fns\";\nimport IcsDownload from \"./IcsDownload\";\nimport CsvDownload from \"./CsvDownload\";\n\ntype Roles = {\n    rolle: string\n}\n\ntype Task = {\n    id: number\n    title: string\n    days: number\n    responsible: Roles[]\n    targets: Roles[]\n    chapters: ChapterT[]\n}\n\nconst dateFormat = 'yyyy-MM-dd'\nconst initialStartDate = format(Date.now(), dateFormat)\nconst initialResponsible = 'all'\n\nconst startDateCacheKey = 'start-date'\nconst responsibleCacheKey = 'responsible'\nconst bufferCacheKey = 'buffer'\nconst calendarPrefixCacheKey = 'calendar-prefix'\n\nfunction CalendarForm() {\n\n    const {t} = useTranslation()\n\n    const [startDate, setStartDate] = useState<string>(initialStartDate)\n    const [responsible, setResponsible] = useState<string>(initialResponsible)\n    const [puffer, setPuffer] = useState<number>(0)\n    const [calendarTitlePrefix, setCalendarTitlePrefix] = useState<string>('')\n    const [taskList, setTaskList] = useState<Task[]>([])\n    const [tasks, setTasks] = useState<TaskT[]>([])\n\n    const onStartDateChanged = (e: ChangeEvent<HTMLInputElement>) => {\n        const newStartDate = e.currentTarget.value\n        setStartDate(newStartDate)\n        window.sessionStorage.setItem(startDateCacheKey, newStartDate)\n    }\n\n    const onResponsibleeChanged = (e: ChangeEvent<HTMLSelectElement>) => {\n        const newResponsible = e.currentTarget.value\n        setResponsible(newResponsible)\n        window.sessionStorage.setItem(responsibleCacheKey, newResponsible);\n    }\n\n    const onBufferChanged = (e: ChangeEvent<HTMLInputElement>) => {\n        const newBuffer = parseInt(e.currentTarget.value) || 0;\n        setPuffer(newBuffer)\n        window.sessionStorage.setItem(bufferCacheKey, newBuffer.toString());\n    }\n\n    const onCalendarPrefixChanged = (e: ChangeEvent<HTMLInputElement>) => {\n        const newPrefix = e.currentTarget.value\n        setCalendarTitlePrefix(newPrefix)\n        window.sessionStorage.setItem(calendarPrefixCacheKey, newPrefix);\n    }\n\n    const resetValues = () => {\n        window.sessionStorage.removeItem(startDateCacheKey);\n        setStartDate(initialStartDate)\n\n        window.sessionStorage.removeItem(responsibleCacheKey);\n        setResponsible(initialResponsible)\n\n        window.sessionStorage.removeItem(bufferCacheKey);\n        setPuffer(0)\n\n        window.sessionStorage.removeItem(calendarPrefixCacheKey);\n        setCalendarTitlePrefix('')\n    }\n\n    const hasActiveCache = () => {\n        return !!window.sessionStorage.getItem(startDateCacheKey)\n            || !!window.sessionStorage.getItem(responsibleCacheKey)\n            || !!window.sessionStorage.getItem(bufferCacheKey)\n            || !!window.sessionStorage.getItem(calendarPrefixCacheKey)\n    }\n\n    const createTasks = useCallback((event?: FormEvent<HTMLFormElement> | undefined) => {\n        event?.preventDefault()\n\n        const parsedStartDate = parse(startDate, dateFormat, Date.now())\n        const filteredTasks = taskList.filter((task: Task) => {\n            const rollen = task.responsible.map((resp) => resp.rolle)\n            return responsible === 'all'\n                ? true\n                : rollen.includes(responsible)\n        })\n\n        const tasks = filteredTasks\n            .map((task: Task) => {\n                const dayOffsetFromStartDate = task.days < 0\n                    ? task.days - puffer\n                    : task.days\n\n                const deadline = task.days !== -1000\n                    ? startOfDay(addDays(parsedStartDate, dayOffsetFromStartDate))\n                    : new Date(parsedStartDate.getFullYear(), 0, 1)\n\n                return {\n                    deadline: deadline,\n                    title: task.title,\n                    targets: task.targets,\n                    responsible: task.responsible,\n                    chapters: task.chapters\n                } as TaskT\n            })\n            .sort((a: TaskT, b: TaskT) => a.deadline.getTime() - b.deadline.getTime())\n\n        setTasks(tasks)\n    }, [startDate, responsible, puffer, taskList]);\n\n    useEffect(() => {\n        createTasks()\n    }, [createTasks]);\n\n    useEffect(() => {\n        const getTasks = async () => {\n            const response = await client.get('/tasks?_locale=' + i18n.language)\n            setTaskList(response.data)\n        }\n\n        const loadCachedValues = () => {\n            const startDate = window.sessionStorage.getItem(startDateCacheKey);\n            setStartDate(startDate || initialStartDate)\n\n            const responsible = window.sessionStorage.getItem(responsibleCacheKey);\n            setResponsible(responsible || initialResponsible)\n\n            const buffer = window.sessionStorage.getItem(bufferCacheKey);\n            setPuffer(parseInt(buffer || '') || 0)\n\n            const calendarPrefix = window.sessionStorage.getItem(calendarPrefixCacheKey);\n            setCalendarTitlePrefix(calendarPrefix || '')\n        }\n\n        loadCachedValues()\n        getTasks()\n    }, []);\n\n    return (\n        <div>\n            <div className='calendar-form-container'>\n                <form>\n                    <ul className='calendar-form'>\n                        <li>\n                            <label>\n                                {t('calendarPage.startDate')}\n                            </label>\n                            <input type=\"date\" name=\"startDate\" value={startDate}\n                                   onChange={onStartDateChanged}/>\n                        </li>\n                        <li>\n                            <label>\n                                {t('calendarPage.responsible')}\n                            </label>\n                            <select name=\"responsible\" id=\"responsible\" value={responsible}\n                                    onChange={onResponsibleeChanged}>\n                                <option value=\"all\">{t('calendarPage.responsibleOptions.all')}</option>\n                                <option value=\"LL\">{t('calendarPage.responsibleOptions.ll')}</option>\n                                <option value=\"AL\">{t('calendarPage.responsibleOptions.al')}</option>\n                                <option value=\"C\">{t('calendarPage.responsibleOptions.c')}</option>\n                            </select>\n                        </li>\n                        <hr/>\n                        <li>\n                            <label>\n                                {t('calendarPage.puffer')}\n                            </label>\n                            <input type=\"number\" id=\"puffer\" name=\"puffer\" value={puffer.toString()}\n                                   onChange={onBufferChanged}/>\n                        </li>\n                        <li>\n                            <label>\n                                {t('calendarPage.prefixPlaceholder')}\n                            </label>\n                            <div>\n                                <input type='text' name='calendar-prefix' value={calendarTitlePrefix}\n                                       onChange={onCalendarPrefixChanged}/>\n                                <div className='calendar-title-prefix-hint'>\n                                    {t('calendarPage.prefixPreview', {calendarTitlePrefix: calendarTitlePrefix})}\n                                </div>\n                            </div>\n                        </li>\n                        <li>\n                            {hasActiveCache() ?\n                                <button className={\"as-link\"}\n                                        onClick={resetValues}>\n                                    {t('calendarPage.resetValues')}\n                                </button>\n                                : <></>\n                            }\n                        </li>\n                    </ul>\n                </form>\n            </div>\n\n            <div className=\"download-btn-group\">\n                <IcsDownload tasks={tasks} calendarTitlePrefix={calendarTitlePrefix}></IcsDownload>\n                <CsvDownload tasks={tasks} calendarTitlePrefix={calendarTitlePrefix}></CsvDownload>\n            </div>\n\n            <CalendarTable tasks={tasks} prefix={calendarTitlePrefix}/>\n        </div>\n    );\n}\n\nexport default CalendarForm","import React, {useEffect} from 'react'\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport Markdown from 'react-markdown'\nimport remarkGfm from 'remark-gfm'\nimport {LinkComponent} from '../../helper/MarkdownComponents'\nimport CalendarForm from './components/CalendarForm'\nimport {IconT} from '../section/components/Section'\nimport {faCalendarDays} from \"@fortawesome/free-solid-svg-icons\"\nimport './calendar.less'\n\nexport type CalendarPageT = {\n    title: string\n    menu_name: string\n    icon: IconT\n    content: string\n}\n\ntype Props = {\n    page: CalendarPageT\n}\n\nfunction CalendarPage(props: Props) {\n\n    const calendarPage = props.page\n\n    useEffect(() => {\n        document.title = calendarPage.title\n    }, [calendarPage]);\n\n    return <div className='content-main'>\n        <div className='calendar'>\n            <h1>\n                <FontAwesomeIcon icon={faCalendarDays}/> {calendarPage.title}\n            </h1>\n            <Markdown\n                remarkPlugins={[remarkGfm]}\n                components={LinkComponent}>\n                {calendarPage.content}\n            </Markdown>\n            <CalendarForm/>\n        </div>\n    </div>\n}\n\nexport default CalendarPage\n"],"names":["WarningDiv","_styled","target","name","styles","Warning","props","content","___EmotionJSX","FontAwesomeIcon","icon","faExclamationTriangle","LinkComponent","blockquote","_ref","children","a","_ref2","node","links","useContext","LinksContext","link","href","linkMatch","match","foundLink","find","l","rel","Link","to","mailto","length","onClick","e","window","location","preventDefault","img","_ref3","alt","found","src","width","height","t","useTranslation","targets","map","join","responsible","concat","chapters","chapter","key","slug","section","title","format","deadline","tasks","taskList","task","Task","className","id","buildDescription","slug_with_section","buildLinks","_props$calendarTitleP","downloadLink","setDownloadLink","useState","useEffect","async","calendarTitlePrefix","ics","require","events","alarms","push","action","description","trigger","hours","before","start","getFullYear","getMonth","getDate","end","url","status","busyStatus","Promise","resolve","reject","createEvents","error","value","data","Blob","type","URL","createObjectURL","generateIcsLink","prepareDownloadLink","spacedCalendarPrefix","download","faCalendarDays","csvContent","forEach","row","blob","generateCsv","faFileCsv","dateFormat","initialStartDate","Date","now","initialResponsible","startDateCacheKey","responsibleCacheKey","bufferCacheKey","calendarPrefixCacheKey","startDate","setStartDate","setResponsible","puffer","setPuffer","setCalendarTitlePrefix","setTaskList","setTasks","createTasks","useCallback","event","parsedStartDate","parse","filter","rollen","resp","rolle","includes","dayOffsetFromStartDate","days","startOfDay","addDays","sort","b","getTime","loadCachedValues","sessionStorage","getItem","buffer","parseInt","calendarPrefix","response","client","get","i18n","language","getTasks","onChange","newStartDate","currentTarget","setItem","newResponsible","toString","newBuffer","newPrefix","resetValues","removeItem","React","IcsDownload","CsvDownload","CalendarTable","prefix","calendarPage","page","document","Markdown","remarkPlugins","remarkGfm","components","CalendarForm"],"sourceRoot":""}